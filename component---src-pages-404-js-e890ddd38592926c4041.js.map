{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Layout","children","data","id","Header","siteTitle","site","siteMetadata","title","className","Date","getFullYear","href","SEO","description","lang","meta","metaDescription","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NotFoundPage"],"mappings":"mJAsCeA,EAhCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUR,OACI,yBAAKC,GAAG,aACJ,kBAACC,EAAA,EAAD,CAAQC,UAAWH,EAAKI,KAAKC,aAAaC,QAC1C,8BAAOP,GACP,4BAAQQ,UAAU,wDACd,yBAAKA,UAAU,uCACX,uBAAGA,UAAU,iBAAb,cACe,IAAIC,MAAOC,cAD1B,4DAGe,uBAAGC,KAAK,4BAAR,e,wBCdnC,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMR,EAAS,EAATA,MAC5BF,EADqC,OACrCA,KAcFW,EAAkBH,GAAeR,EAAKC,aAAaO,YAEzD,OACI,kBAACI,EAAA,EAAD,CACIC,eAAgB,CAACJ,QACjBP,MAAOA,EACPY,cAAa,QAAUd,EAAKC,aAAaC,MACzCQ,KAAM,CACF,CACIK,KAAK,cACLC,QAASL,GAEb,CACIM,SAAS,WACTD,QAASd,GAEb,CACIe,SAAS,iBACTD,QAASL,GAEb,CACIM,SAAS,UACTD,QAAQ,WAEZ,CACID,KAAK,eACLC,QAAQ,WAEZ,CACID,KAAK,kBACLC,QAAShB,EAAKC,aAAaiB,QAE/B,CACIH,KAAK,gBACLC,QAASd,GAEb,CACIa,KAAK,sBACLC,QAASL,IAEfQ,OAAOT,KAKrBH,EAAIa,aAAe,CACfX,KAAK,KACLC,KAAM,GACNF,YAAY,IAUDD,QCxEAc,UARM,kBACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAKnB,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-e890ddd38592926c4041.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n    return (\n        <div id=\"container\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            <main>{children}</main>\n            <footer className=\"tier tier-centered tier-darkbackground tier-nomargin\">\n                <div className=\"vlist vlist-small vlist-centeritems\">\n                    <p className=\"txt txt-white\">\n                        Copyright {new Date().getFullYear()} Markandrewgoetz.com. All rights reserved\n                        &nbsp;â€¢&nbsp;\n                        Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n                    </p>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description\n\n    return (\n        <Helmet\n            htmlAttributes={{lang}}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n}\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n}\n\nexport default SEO;\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}